Grammar

    0 $accept: program "end file"

    1 program: globals

    2 globals: globals decl
    3        | ε

    4 decl: varDecl SEMICOL
    5     | classDecl
    6     | fnDecl

    7 varDecl: id COLON type
    8        | id COLON type ASSIGN exp

    9 type: primType
   10     | id
   11     | PERFECT primType
   12     | PERFECT id

   13 primType: INT
   14         | BOOL
   15         | VOID

   16 classDecl: id COLON CLASS LCURLY classBody RCURLY SEMICOL

   17 classBody: classBody varDecl SEMICOL
   18          | classBody fnDecl
   19          | ε

   20 fnDecl: id COLON LPAREN formals RPAREN type LCURLY stmtList RCURLY

   21 formals: ε
   22        | formalsList

   23 formalsList: formalDecl
   24            | formalsList COMMA formalDecl

   25 formalDecl: id COLON type

   26 stmtList: ε
   27         | stmtList stmt SEMICOL
   28         | stmtList blockStmt

   29 blockStmt: WHILE LPAREN exp RPAREN LCURLY stmtList RCURLY
   30          | IF LPAREN exp RPAREN LCURLY stmtList RCURLY
   31          | IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

   32 stmt: varDecl
   33     | loc ASSIGN exp
   34     | loc POSTDEC
   35     | loc POSTINC
   36     | GIVE exp
   37     | TAKE loc
   38     | RETURN exp
   39     | RETURN
   40     | EXIT
   41     | callExp

   42 exp: exp DASH exp
   43    | exp CROSS exp
   44    | exp STAR exp
   45    | exp SLASH exp
   46    | exp AND exp
   47    | exp OR exp
   48    | exp EQUALS exp
   49    | exp NOTEQUALS exp
   50    | exp GREATER exp
   51    | exp GREATEREQ exp
   52    | exp LESS exp
   53    | exp LESSEQ exp
   54    | NOT exp
   55    | DASH term
   56    | term

   57 callExp: loc LPAREN RPAREN
   58        | loc LPAREN actualsList RPAREN

   59 actualsList: exp
   60            | actualsList COMMA exp

   61 term: loc
   62     | INTLITERAL
   63     | STRINGLITERAL
   64     | TRUE
   65     | FALSE
   66     | MAGIC
   67     | LPAREN exp RPAREN
   68     | callExp

   69 loc: id
   70    | loc POSTDEC id

   71 id: ID


Terminals, with rules where they appear

    "end file" (0) 0
    error (256)
    AND <transToken> (258) 46
    ASSIGN <transToken> (259) 8 33
    BOOL <transToken> (260) 14
    COLON <transToken> (261) 7 8 16 20 25
    COMMA <transToken> (262) 24 60
    CLASS <transToken> (263) 16
    DASH <transToken> (264) 42 55
    ELSE <transToken> (265) 31
    EXIT <transToken> (266) 40
    EQUALS <transToken> (267) 48
    FALSE <transToken> (268) 65
    GIVE <transToken> (269) 36
    GREATER <transToken> (270) 50
    GREATEREQ <transToken> (271) 51
    ID <transIDToken> (272) 71
    IF <transToken> (273) 30 31
    INT <transToken> (274) 13
    INTLITERAL <transIntToken> (275) 62
    LCURLY <transToken> (276) 16 20 29 30 31
    LESS <transToken> (277) 52
    LESSEQ <transToken> (278) 53
    LPAREN <transToken> (279) 20 29 30 31 57 58 67
    MAGIC <transToken> (280) 66
    NOT <transToken> (281) 54
    NOTEQUALS <transToken> (282) 49
    OR <transToken> (283) 47
    PERFECT <transToken> (284) 11 12
    CROSS <transToken> (285) 43
    POSTDEC <transToken> (286) 34 70
    POSTINC <transToken> (287) 35
    RETURN <transToken> (288) 38 39
    RCURLY <transToken> (289) 16 20 29 30 31
    RPAREN <transToken> (290) 20 29 30 31 57 58 67
    SEMICOL <transToken> (291) 4 16 17 27
    SLASH <transToken> (292) 45
    STAR <transToken> (293) 44
    STRINGLITERAL <transStrToken> (294) 63
    TAKE <transToken> (295) 37
    TRUE <transToken> (296) 64
    VOID <transToken> (297) 15
    WHILE <transToken> (298) 29


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program <transProgram> (45)
        on left: 1
        on right: 0
    globals <transDeclList> (46)
        on left: 2 3
        on right: 1 2
    decl <transDecl> (47)
        on left: 4 5 6
        on right: 2
    varDecl <transVarDecl> (48)
        on left: 7 8
        on right: 4 17 32
    type <transType> (49)
        on left: 9 10 11 12
        on right: 7 8 20 25
    primType <transType> (50)
        on left: 13 14 15
        on right: 9 11
    classDecl <transClassDefn> (51)
        on left: 16
        on right: 5
    classBody <transClassBody> (52)
        on left: 17 18 19
        on right: 16 17 18
    fnDecl <transFn> (53)
        on left: 20
        on right: 6 18
    formals <transFormalList> (54)
        on left: 21 22
        on right: 20
    formalsList <transFormalList> (55)
        on left: 23 24
        on right: 22 24
    formalDecl <transFormal> (56)
        on left: 25
        on right: 23 24
    stmtList <transStmts> (57)
        on left: 26 27 28
        on right: 20 27 28 29 30 31
    blockStmt <transStmt> (58)
        on left: 29 30 31
        on right: 28
    stmt <transStmt> (59)
        on left: 32 33 34 35 36 37 38 39 40 41
        on right: 27
    exp <transExp> (60)
        on left: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
        on right: 8 29 30 31 33 36 38 42 43 44 45 46 47 48 49 50 51 52 53 54 59 60 67
    callExp <transCallExp> (61)
        on left: 57 58
        on right: 41 68
    actualsList <transActuals> (62)
        on left: 59 60
        on right: 58 60
    term <transExp> (63)
        on left: 61 62 63 64 65 66 67 68
        on right: 55 56
    loc <transLoc> (64)
        on left: 69 70
        on right: 33 34 35 37 57 58 61 70
    id <transID> (65)
        on left: 71
        on right: 7 8 10 12 16 20 25 69 70


State 0

    0 $accept: • program "end file"

    $default  reduce using rule 3 (globals)

    program  go to state 1
    globals  go to state 2


State 1

    0 $accept: program • "end file"

    "end file"  shift, and go to state 3


State 2

    1 program: globals •
    2 globals: globals • decl

    ID  shift, and go to state 4

    $default  reduce using rule 1 (program)

    decl       go to state 5
    varDecl    go to state 6
    classDecl  go to state 7
    fnDecl     go to state 8
    id         go to state 9


State 3

    0 $accept: program "end file" •

    $default  accept


State 4

   71 id: ID •

    $default  reduce using rule 71 (id)


State 5

    2 globals: globals decl •

    $default  reduce using rule 2 (globals)


State 6

    4 decl: varDecl • SEMICOL

    SEMICOL  shift, and go to state 10


State 7

    5 decl: classDecl •

    $default  reduce using rule 5 (decl)


State 8

    6 decl: fnDecl •

    $default  reduce using rule 6 (decl)


State 9

    7 varDecl: id • COLON type
    8        | id • COLON type ASSIGN exp
   16 classDecl: id • COLON CLASS LCURLY classBody RCURLY SEMICOL
   20 fnDecl: id • COLON LPAREN formals RPAREN type LCURLY stmtList RCURLY

    COLON  shift, and go to state 11


State 10

    4 decl: varDecl SEMICOL •

    $default  reduce using rule 4 (decl)


State 11

    7 varDecl: id COLON • type
    8        | id COLON • type ASSIGN exp
   16 classDecl: id COLON • CLASS LCURLY classBody RCURLY SEMICOL
   20 fnDecl: id COLON • LPAREN formals RPAREN type LCURLY stmtList RCURLY

    BOOL     shift, and go to state 12
    CLASS    shift, and go to state 13
    ID       shift, and go to state 4
    INT      shift, and go to state 14
    LPAREN   shift, and go to state 15
    PERFECT  shift, and go to state 16
    VOID     shift, and go to state 17

    type      go to state 18
    primType  go to state 19
    id        go to state 20


State 12

   14 primType: BOOL •

    $default  reduce using rule 14 (primType)


State 13

   16 classDecl: id COLON CLASS • LCURLY classBody RCURLY SEMICOL

    LCURLY  shift, and go to state 21


State 14

   13 primType: INT •

    $default  reduce using rule 13 (primType)


State 15

   20 fnDecl: id COLON LPAREN • formals RPAREN type LCURLY stmtList RCURLY

    ID  shift, and go to state 4

    $default  reduce using rule 21 (formals)

    formals      go to state 22
    formalsList  go to state 23
    formalDecl   go to state 24
    id           go to state 25


State 16

   11 type: PERFECT • primType
   12     | PERFECT • id

    BOOL  shift, and go to state 12
    ID    shift, and go to state 4
    INT   shift, and go to state 14
    VOID  shift, and go to state 17

    primType  go to state 26
    id        go to state 27


State 17

   15 primType: VOID •

    $default  reduce using rule 15 (primType)


State 18

    7 varDecl: id COLON type •
    8        | id COLON type • ASSIGN exp

    ASSIGN  shift, and go to state 28

    $default  reduce using rule 7 (varDecl)


State 19

    9 type: primType •

    $default  reduce using rule 9 (type)


State 20

   10 type: id •

    $default  reduce using rule 10 (type)


State 21

   16 classDecl: id COLON CLASS LCURLY • classBody RCURLY SEMICOL

    $default  reduce using rule 19 (classBody)

    classBody  go to state 29


State 22

   20 fnDecl: id COLON LPAREN formals • RPAREN type LCURLY stmtList RCURLY

    RPAREN  shift, and go to state 30


State 23

   22 formals: formalsList •
   24 formalsList: formalsList • COMMA formalDecl

    COMMA  shift, and go to state 31

    $default  reduce using rule 22 (formals)


State 24

   23 formalsList: formalDecl •

    $default  reduce using rule 23 (formalsList)


State 25

   25 formalDecl: id • COLON type

    COLON  shift, and go to state 32


State 26

   11 type: PERFECT primType •

    $default  reduce using rule 11 (type)


State 27

   12 type: PERFECT id •

    $default  reduce using rule 12 (type)


State 28

    8 varDecl: id COLON type ASSIGN • exp

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 41
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 29

   16 classDecl: id COLON CLASS LCURLY classBody • RCURLY SEMICOL
   17 classBody: classBody • varDecl SEMICOL
   18          | classBody • fnDecl

    ID      shift, and go to state 4
    RCURLY  shift, and go to state 46

    varDecl  go to state 47
    fnDecl   go to state 48
    id       go to state 49


State 30

   20 fnDecl: id COLON LPAREN formals RPAREN • type LCURLY stmtList RCURLY

    BOOL     shift, and go to state 12
    ID       shift, and go to state 4
    INT      shift, and go to state 14
    PERFECT  shift, and go to state 16
    VOID     shift, and go to state 17

    type      go to state 50
    primType  go to state 19
    id        go to state 20


State 31

   24 formalsList: formalsList COMMA • formalDecl

    ID  shift, and go to state 4

    formalDecl  go to state 51
    id          go to state 25


State 32

   25 formalDecl: id COLON • type

    BOOL     shift, and go to state 12
    ID       shift, and go to state 4
    INT      shift, and go to state 14
    PERFECT  shift, and go to state 16
    VOID     shift, and go to state 17

    type      go to state 52
    primType  go to state 19
    id        go to state 20


State 33

   55 exp: DASH • term

    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    callExp  go to state 42
    term     go to state 53
    loc      go to state 44
    id       go to state 45


State 34

   65 term: FALSE •

    $default  reduce using rule 65 (term)


State 35

   62 term: INTLITERAL •

    $default  reduce using rule 62 (term)


State 36

   67 term: LPAREN • exp RPAREN

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 54
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 37

   66 term: MAGIC •

    $default  reduce using rule 66 (term)


State 38

   54 exp: NOT • exp

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 55
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 39

   63 term: STRINGLITERAL •

    $default  reduce using rule 63 (term)


State 40

   64 term: TRUE •

    $default  reduce using rule 64 (term)


State 41

    8 varDecl: id COLON type ASSIGN exp •
   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp

    AND        shift, and go to state 56
    DASH       shift, and go to state 57
    EQUALS     shift, and go to state 58
    GREATER    shift, and go to state 59
    GREATEREQ  shift, and go to state 60
    LESS       shift, and go to state 61
    LESSEQ     shift, and go to state 62
    NOTEQUALS  shift, and go to state 63
    OR         shift, and go to state 64
    CROSS      shift, and go to state 65
    SLASH      shift, and go to state 66
    STAR       shift, and go to state 67

    $default  reduce using rule 8 (varDecl)


State 42

   68 term: callExp •

    $default  reduce using rule 68 (term)


State 43

   56 exp: term •

    $default  reduce using rule 56 (exp)


State 44

   57 callExp: loc • LPAREN RPAREN
   58        | loc • LPAREN actualsList RPAREN
   61 term: loc •
   70 loc: loc • POSTDEC id

    LPAREN   shift, and go to state 68
    POSTDEC  shift, and go to state 69

    $default  reduce using rule 61 (term)


State 45

   69 loc: id •

    $default  reduce using rule 69 (loc)


State 46

   16 classDecl: id COLON CLASS LCURLY classBody RCURLY • SEMICOL

    SEMICOL  shift, and go to state 70


State 47

   17 classBody: classBody varDecl • SEMICOL

    SEMICOL  shift, and go to state 71


State 48

   18 classBody: classBody fnDecl •

    $default  reduce using rule 18 (classBody)


State 49

    7 varDecl: id • COLON type
    8        | id • COLON type ASSIGN exp
   20 fnDecl: id • COLON LPAREN formals RPAREN type LCURLY stmtList RCURLY

    COLON  shift, and go to state 72


State 50

   20 fnDecl: id COLON LPAREN formals RPAREN type • LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 73


State 51

   24 formalsList: formalsList COMMA formalDecl •

    $default  reduce using rule 24 (formalsList)


State 52

   25 formalDecl: id COLON type •

    $default  reduce using rule 25 (formalDecl)


State 53

   55 exp: DASH term •

    $default  reduce using rule 55 (exp)


State 54

   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp
   67 term: LPAREN exp • RPAREN

    AND        shift, and go to state 56
    DASH       shift, and go to state 57
    EQUALS     shift, and go to state 58
    GREATER    shift, and go to state 59
    GREATEREQ  shift, and go to state 60
    LESS       shift, and go to state 61
    LESSEQ     shift, and go to state 62
    NOTEQUALS  shift, and go to state 63
    OR         shift, and go to state 64
    CROSS      shift, and go to state 65
    RPAREN     shift, and go to state 74
    SLASH      shift, and go to state 66
    STAR       shift, and go to state 67


State 55

   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp
   54    | NOT exp •

    $default  reduce using rule 54 (exp)


State 56

   46 exp: exp AND • exp

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 75
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 57

   42 exp: exp DASH • exp

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 76
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 58

   48 exp: exp EQUALS • exp

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 77
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 59

   50 exp: exp GREATER • exp

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 78
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 60

   51 exp: exp GREATEREQ • exp

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 79
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 61

   52 exp: exp LESS • exp

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 80
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 62

   53 exp: exp LESSEQ • exp

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 81
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 63

   49 exp: exp NOTEQUALS • exp

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 82
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 64

   47 exp: exp OR • exp

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 83
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 65

   43 exp: exp CROSS • exp

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 84
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 66

   45 exp: exp SLASH • exp

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 85
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 67

   44 exp: exp STAR • exp

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 86
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 68

   57 callExp: loc LPAREN • RPAREN
   58        | loc LPAREN • actualsList RPAREN

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    RPAREN         shift, and go to state 87
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp          go to state 88
    callExp      go to state 42
    actualsList  go to state 89
    term         go to state 43
    loc          go to state 44
    id           go to state 45


State 69

   70 loc: loc POSTDEC • id

    ID  shift, and go to state 4

    id  go to state 90


State 70

   16 classDecl: id COLON CLASS LCURLY classBody RCURLY SEMICOL •

    $default  reduce using rule 16 (classDecl)


State 71

   17 classBody: classBody varDecl SEMICOL •

    $default  reduce using rule 17 (classBody)


State 72

    7 varDecl: id COLON • type
    8        | id COLON • type ASSIGN exp
   20 fnDecl: id COLON • LPAREN formals RPAREN type LCURLY stmtList RCURLY

    BOOL     shift, and go to state 12
    ID       shift, and go to state 4
    INT      shift, and go to state 14
    LPAREN   shift, and go to state 15
    PERFECT  shift, and go to state 16
    VOID     shift, and go to state 17

    type      go to state 18
    primType  go to state 19
    id        go to state 20


State 73

   20 fnDecl: id COLON LPAREN formals RPAREN type LCURLY • stmtList RCURLY

    $default  reduce using rule 26 (stmtList)

    stmtList  go to state 91


State 74

   67 term: LPAREN exp RPAREN •

    $default  reduce using rule 67 (term)


State 75

   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   46    | exp AND exp •
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp

    DASH       shift, and go to state 57
    EQUALS     shift, and go to state 58
    GREATER    shift, and go to state 59
    GREATEREQ  shift, and go to state 60
    LESS       shift, and go to state 61
    LESSEQ     shift, and go to state 62
    NOTEQUALS  shift, and go to state 63
    CROSS      shift, and go to state 65
    SLASH      shift, and go to state 66
    STAR       shift, and go to state 67

    $default  reduce using rule 46 (exp)


State 76

   42 exp: exp • DASH exp
   42    | exp DASH exp •
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp

    SLASH  shift, and go to state 66
    STAR   shift, and go to state 67

    $default  reduce using rule 42 (exp)


State 77

   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   48    | exp EQUALS exp •
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp

    DASH   shift, and go to state 57
    CROSS  shift, and go to state 65
    SLASH  shift, and go to state 66
    STAR   shift, and go to state 67

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 48 (exp)


State 78

   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   50    | exp GREATER exp •
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp

    DASH   shift, and go to state 57
    CROSS  shift, and go to state 65
    SLASH  shift, and go to state 66
    STAR   shift, and go to state 67

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 50 (exp)


State 79

   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   51    | exp GREATEREQ exp •
   52    | exp • LESS exp
   53    | exp • LESSEQ exp

    DASH   shift, and go to state 57
    CROSS  shift, and go to state 65
    SLASH  shift, and go to state 66
    STAR   shift, and go to state 67

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 51 (exp)


State 80

   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   52    | exp LESS exp •
   53    | exp • LESSEQ exp

    DASH   shift, and go to state 57
    CROSS  shift, and go to state 65
    SLASH  shift, and go to state 66
    STAR   shift, and go to state 67

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 52 (exp)


State 81

   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp
   53    | exp LESSEQ exp •

    DASH   shift, and go to state 57
    CROSS  shift, and go to state 65
    SLASH  shift, and go to state 66
    STAR   shift, and go to state 67

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 53 (exp)


State 82

   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   49    | exp NOTEQUALS exp •
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp

    DASH   shift, and go to state 57
    CROSS  shift, and go to state 65
    SLASH  shift, and go to state 66
    STAR   shift, and go to state 67

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 49 (exp)


State 83

   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   47    | exp OR exp •
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp

    AND        shift, and go to state 56
    DASH       shift, and go to state 57
    EQUALS     shift, and go to state 58
    GREATER    shift, and go to state 59
    GREATEREQ  shift, and go to state 60
    LESS       shift, and go to state 61
    LESSEQ     shift, and go to state 62
    NOTEQUALS  shift, and go to state 63
    CROSS      shift, and go to state 65
    SLASH      shift, and go to state 66
    STAR       shift, and go to state 67

    $default  reduce using rule 47 (exp)


State 84

   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   43    | exp CROSS exp •
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp

    SLASH  shift, and go to state 66
    STAR   shift, and go to state 67

    $default  reduce using rule 43 (exp)


State 85

   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   45    | exp SLASH exp •
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp

    $default  reduce using rule 45 (exp)


State 86

   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   44    | exp STAR exp •
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp

    $default  reduce using rule 44 (exp)


State 87

   57 callExp: loc LPAREN RPAREN •

    $default  reduce using rule 57 (callExp)


State 88

   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp
   59 actualsList: exp •

    AND        shift, and go to state 56
    DASH       shift, and go to state 57
    EQUALS     shift, and go to state 58
    GREATER    shift, and go to state 59
    GREATEREQ  shift, and go to state 60
    LESS       shift, and go to state 61
    LESSEQ     shift, and go to state 62
    NOTEQUALS  shift, and go to state 63
    OR         shift, and go to state 64
    CROSS      shift, and go to state 65
    SLASH      shift, and go to state 66
    STAR       shift, and go to state 67

    $default  reduce using rule 59 (actualsList)


State 89

   58 callExp: loc LPAREN actualsList • RPAREN
   60 actualsList: actualsList • COMMA exp

    COMMA   shift, and go to state 92
    RPAREN  shift, and go to state 93


State 90

   70 loc: loc POSTDEC id •

    $default  reduce using rule 70 (loc)


State 91

   20 fnDecl: id COLON LPAREN formals RPAREN type LCURLY stmtList • RCURLY
   27 stmtList: stmtList • stmt SEMICOL
   28         | stmtList • blockStmt

    EXIT    shift, and go to state 94
    GIVE    shift, and go to state 95
    ID      shift, and go to state 4
    IF      shift, and go to state 96
    RETURN  shift, and go to state 97
    RCURLY  shift, and go to state 98
    TAKE    shift, and go to state 99
    WHILE   shift, and go to state 100

    varDecl    go to state 101
    blockStmt  go to state 102
    stmt       go to state 103
    callExp    go to state 104
    loc        go to state 105
    id         go to state 106


State 92

   60 actualsList: actualsList COMMA • exp

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 107
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 93

   58 callExp: loc LPAREN actualsList RPAREN •

    $default  reduce using rule 58 (callExp)


State 94

   40 stmt: EXIT •

    $default  reduce using rule 40 (stmt)


State 95

   36 stmt: GIVE • exp

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 108
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 96

   30 blockStmt: IF • LPAREN exp RPAREN LCURLY stmtList RCURLY
   31          | IF • LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    LPAREN  shift, and go to state 109


State 97

   38 stmt: RETURN • exp
   39     | RETURN •

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    $default  reduce using rule 39 (stmt)

    exp      go to state 110
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 98

   20 fnDecl: id COLON LPAREN formals RPAREN type LCURLY stmtList RCURLY •

    $default  reduce using rule 20 (fnDecl)


State 99

   37 stmt: TAKE • loc

    ID  shift, and go to state 4

    loc  go to state 111
    id   go to state 45


State 100

   29 blockStmt: WHILE • LPAREN exp RPAREN LCURLY stmtList RCURLY

    LPAREN  shift, and go to state 112


State 101

   32 stmt: varDecl •

    $default  reduce using rule 32 (stmt)


State 102

   28 stmtList: stmtList blockStmt •

    $default  reduce using rule 28 (stmtList)


State 103

   27 stmtList: stmtList stmt • SEMICOL

    SEMICOL  shift, and go to state 113


State 104

   41 stmt: callExp •

    $default  reduce using rule 41 (stmt)


State 105

   33 stmt: loc • ASSIGN exp
   34     | loc • POSTDEC
   35     | loc • POSTINC
   57 callExp: loc • LPAREN RPAREN
   58        | loc • LPAREN actualsList RPAREN
   70 loc: loc • POSTDEC id

    ASSIGN   shift, and go to state 114
    LPAREN   shift, and go to state 68
    POSTDEC  shift, and go to state 115
    POSTINC  shift, and go to state 116


State 106

    7 varDecl: id • COLON type
    8        | id • COLON type ASSIGN exp
   69 loc: id •

    COLON  shift, and go to state 117

    $default  reduce using rule 69 (loc)


State 107

   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp
   60 actualsList: actualsList COMMA exp •

    AND        shift, and go to state 56
    DASH       shift, and go to state 57
    EQUALS     shift, and go to state 58
    GREATER    shift, and go to state 59
    GREATEREQ  shift, and go to state 60
    LESS       shift, and go to state 61
    LESSEQ     shift, and go to state 62
    NOTEQUALS  shift, and go to state 63
    OR         shift, and go to state 64
    CROSS      shift, and go to state 65
    SLASH      shift, and go to state 66
    STAR       shift, and go to state 67

    $default  reduce using rule 60 (actualsList)


State 108

   36 stmt: GIVE exp •
   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp

    AND        shift, and go to state 56
    DASH       shift, and go to state 57
    EQUALS     shift, and go to state 58
    GREATER    shift, and go to state 59
    GREATEREQ  shift, and go to state 60
    LESS       shift, and go to state 61
    LESSEQ     shift, and go to state 62
    NOTEQUALS  shift, and go to state 63
    OR         shift, and go to state 64
    CROSS      shift, and go to state 65
    SLASH      shift, and go to state 66
    STAR       shift, and go to state 67

    $default  reduce using rule 36 (stmt)


State 109

   30 blockStmt: IF LPAREN • exp RPAREN LCURLY stmtList RCURLY
   31          | IF LPAREN • exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 118
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 110

   38 stmt: RETURN exp •
   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp

    AND        shift, and go to state 56
    DASH       shift, and go to state 57
    EQUALS     shift, and go to state 58
    GREATER    shift, and go to state 59
    GREATEREQ  shift, and go to state 60
    LESS       shift, and go to state 61
    LESSEQ     shift, and go to state 62
    NOTEQUALS  shift, and go to state 63
    OR         shift, and go to state 64
    CROSS      shift, and go to state 65
    SLASH      shift, and go to state 66
    STAR       shift, and go to state 67

    $default  reduce using rule 38 (stmt)


State 111

   37 stmt: TAKE loc •
   70 loc: loc • POSTDEC id

    POSTDEC  shift, and go to state 69

    $default  reduce using rule 37 (stmt)


State 112

   29 blockStmt: WHILE LPAREN • exp RPAREN LCURLY stmtList RCURLY

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 119
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 113

   27 stmtList: stmtList stmt SEMICOL •

    $default  reduce using rule 27 (stmtList)


State 114

   33 stmt: loc ASSIGN • exp

    DASH           shift, and go to state 33
    FALSE          shift, and go to state 34
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 35
    LPAREN         shift, and go to state 36
    MAGIC          shift, and go to state 37
    NOT            shift, and go to state 38
    STRINGLITERAL  shift, and go to state 39
    TRUE           shift, and go to state 40

    exp      go to state 120
    callExp  go to state 42
    term     go to state 43
    loc      go to state 44
    id       go to state 45


State 115

   34 stmt: loc POSTDEC •
   70 loc: loc POSTDEC • id

    ID  shift, and go to state 4

    $default  reduce using rule 34 (stmt)

    id  go to state 90


State 116

   35 stmt: loc POSTINC •

    $default  reduce using rule 35 (stmt)


State 117

    7 varDecl: id COLON • type
    8        | id COLON • type ASSIGN exp

    BOOL     shift, and go to state 12
    ID       shift, and go to state 4
    INT      shift, and go to state 14
    PERFECT  shift, and go to state 16
    VOID     shift, and go to state 17

    type      go to state 18
    primType  go to state 19
    id        go to state 20


State 118

   30 blockStmt: IF LPAREN exp • RPAREN LCURLY stmtList RCURLY
   31          | IF LPAREN exp • RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY
   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp

    AND        shift, and go to state 56
    DASH       shift, and go to state 57
    EQUALS     shift, and go to state 58
    GREATER    shift, and go to state 59
    GREATEREQ  shift, and go to state 60
    LESS       shift, and go to state 61
    LESSEQ     shift, and go to state 62
    NOTEQUALS  shift, and go to state 63
    OR         shift, and go to state 64
    CROSS      shift, and go to state 65
    RPAREN     shift, and go to state 121
    SLASH      shift, and go to state 66
    STAR       shift, and go to state 67


State 119

   29 blockStmt: WHILE LPAREN exp • RPAREN LCURLY stmtList RCURLY
   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp

    AND        shift, and go to state 56
    DASH       shift, and go to state 57
    EQUALS     shift, and go to state 58
    GREATER    shift, and go to state 59
    GREATEREQ  shift, and go to state 60
    LESS       shift, and go to state 61
    LESSEQ     shift, and go to state 62
    NOTEQUALS  shift, and go to state 63
    OR         shift, and go to state 64
    CROSS      shift, and go to state 65
    RPAREN     shift, and go to state 122
    SLASH      shift, and go to state 66
    STAR       shift, and go to state 67


State 120

   33 stmt: loc ASSIGN exp •
   42 exp: exp • DASH exp
   43    | exp • CROSS exp
   44    | exp • STAR exp
   45    | exp • SLASH exp
   46    | exp • AND exp
   47    | exp • OR exp
   48    | exp • EQUALS exp
   49    | exp • NOTEQUALS exp
   50    | exp • GREATER exp
   51    | exp • GREATEREQ exp
   52    | exp • LESS exp
   53    | exp • LESSEQ exp

    AND        shift, and go to state 56
    DASH       shift, and go to state 57
    EQUALS     shift, and go to state 58
    GREATER    shift, and go to state 59
    GREATEREQ  shift, and go to state 60
    LESS       shift, and go to state 61
    LESSEQ     shift, and go to state 62
    NOTEQUALS  shift, and go to state 63
    OR         shift, and go to state 64
    CROSS      shift, and go to state 65
    SLASH      shift, and go to state 66
    STAR       shift, and go to state 67

    $default  reduce using rule 33 (stmt)


State 121

   30 blockStmt: IF LPAREN exp RPAREN • LCURLY stmtList RCURLY
   31          | IF LPAREN exp RPAREN • LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 123


State 122

   29 blockStmt: WHILE LPAREN exp RPAREN • LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 124


State 123

   30 blockStmt: IF LPAREN exp RPAREN LCURLY • stmtList RCURLY
   31          | IF LPAREN exp RPAREN LCURLY • stmtList RCURLY ELSE LCURLY stmtList RCURLY

    $default  reduce using rule 26 (stmtList)

    stmtList  go to state 125


State 124

   29 blockStmt: WHILE LPAREN exp RPAREN LCURLY • stmtList RCURLY

    $default  reduce using rule 26 (stmtList)

    stmtList  go to state 126


State 125

   27 stmtList: stmtList • stmt SEMICOL
   28         | stmtList • blockStmt
   30 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList • RCURLY
   31          | IF LPAREN exp RPAREN LCURLY stmtList • RCURLY ELSE LCURLY stmtList RCURLY

    EXIT    shift, and go to state 94
    GIVE    shift, and go to state 95
    ID      shift, and go to state 4
    IF      shift, and go to state 96
    RETURN  shift, and go to state 97
    RCURLY  shift, and go to state 127
    TAKE    shift, and go to state 99
    WHILE   shift, and go to state 100

    varDecl    go to state 101
    blockStmt  go to state 102
    stmt       go to state 103
    callExp    go to state 104
    loc        go to state 105
    id         go to state 106


State 126

   27 stmtList: stmtList • stmt SEMICOL
   28         | stmtList • blockStmt
   29 blockStmt: WHILE LPAREN exp RPAREN LCURLY stmtList • RCURLY

    EXIT    shift, and go to state 94
    GIVE    shift, and go to state 95
    ID      shift, and go to state 4
    IF      shift, and go to state 96
    RETURN  shift, and go to state 97
    RCURLY  shift, and go to state 128
    TAKE    shift, and go to state 99
    WHILE   shift, and go to state 100

    varDecl    go to state 101
    blockStmt  go to state 102
    stmt       go to state 103
    callExp    go to state 104
    loc        go to state 105
    id         go to state 106


State 127

   30 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY •
   31          | IF LPAREN exp RPAREN LCURLY stmtList RCURLY • ELSE LCURLY stmtList RCURLY

    ELSE  shift, and go to state 129

    $default  reduce using rule 30 (blockStmt)


State 128

   29 blockStmt: WHILE LPAREN exp RPAREN LCURLY stmtList RCURLY •

    $default  reduce using rule 29 (blockStmt)


State 129

   31 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE • LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 130


State 130

   31 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY • stmtList RCURLY

    $default  reduce using rule 26 (stmtList)

    stmtList  go to state 131


State 131

   27 stmtList: stmtList • stmt SEMICOL
   28         | stmtList • blockStmt
   31 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList • RCURLY

    EXIT    shift, and go to state 94
    GIVE    shift, and go to state 95
    ID      shift, and go to state 4
    IF      shift, and go to state 96
    RETURN  shift, and go to state 97
    RCURLY  shift, and go to state 132
    TAKE    shift, and go to state 99
    WHILE   shift, and go to state 100

    varDecl    go to state 101
    blockStmt  go to state 102
    stmt       go to state 103
    callExp    go to state 104
    loc        go to state 105
    id         go to state 106


State 132

   31 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY •

    $default  reduce using rule 31 (blockStmt)
